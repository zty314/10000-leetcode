package com.tyty.daily.wtf;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @author zhangty
 * @version 1.0
 * @date 2021/10/10 14:52
 */
public class IntersectionTwoArrays {

	public static int[] intersect(int[] nums1, int[] nums2) {
		Map<Integer, Integer> map1 = new HashMap();
		Arrays.stream(nums1).forEach(n -> {
			if (map1.containsKey(n)) {
				Integer i = map1.get(n);
				map1.put(n, ++i);
			} else {
				map1.put(n, 1);
			}
		});

		Map<Integer, Integer> map2 = new HashMap();
		Arrays.stream(nums2).forEach(n -> {
			if (map2.containsKey(n)) {
				Integer i = map2.get(n);
				map2.put(n, ++i);
			} else {
				map2.put(n, 1);
			}
		});

		List<Integer> list = new ArrayList<>();
		map1.forEach((k, v) -> {
			if (map2.containsKey(k)) {
				Integer v2 = map2.get(k);
				if (v > v2) {
					for (int i = 0; i < v2; i++) {
						list.add(k);
					}
				} else {
					for (int i = 0; i < v; i++) {
						list.add(k);
					}
				}

			}
		});
		return list.stream().mapToInt(Integer::intValue).toArray();
	}

	public static void main(String[] args) {

		int[] nums1 = {4, 9, 5}, nums2 = {9, 4, 9, 8, 4};
		int[] intersect = intersect(nums1, nums2);
		for (int i = intersect.length - 1; i >= 0; i--) {
			System.out.print(intersect[i] + " ");
		}
	}

	static class Solution {
		public static int[] intersect(int[] nums1, int[] nums2) {
			Arrays.sort(nums1);
			Arrays.sort(nums2);

			List<Integer> list = new ArrayList<>();

			int i =0, j = 0;
			while(i < nums1.length && j < nums2.length) {
				if(nums1[i] < nums2[j]) {
					i++;
				} else if (nums1[i] > nums2[j]) {
					j++;
				} else {
					list.add(nums1[i]);
					i++;
					j++;
				}
			}
			int[] newNums = new int[list.size()];
			for(int k = 0; k < list.size(); k++) {
				newNums[k] = list.get(k);

			}
			return newNums;
		}

		public static void main(String[] args) {
			int[] arr1 = {1,103,1037,1039,105,107,1071,1075,1077,1079,1087,1089,109,1091,1093,1097,1109,111,1111,1113,1115,1117,1121,1123,1125,1127,117,1173,1177,1179,1181,1183,1187,119,121,1235,1237,1239,127,1275,1277,1279,1281,1289,1291,1295,1297,1299,1301,1303,1305,1307,1309,1311,1313,1315,1317,133,1345,1347,135,1351,1363,1365,1367,1369,1371,1377,1379,1383,1385,1387,1389,1391,1395,1399,1401,1403,1405,1407,1409,1413,1421,1425,1427,1431,1433,1437,1445,1449,145,1453,1457,1461,1465,1467,1471,1473,1475,1477,1479,1483,1485,1491,1499,15,1505,151,1515,1523,1531,1533,1535,1537,1539,1543,1547,1549,1553,1557,1563,1565,1569,1571,1573,1575,1577,1581,1583,1585,1587,1589,159,1591,1593,1595,1597,1599,1607,1613,1625,163,1631,1633,1635,1637,1641,1643,1645,1651,1653,1657,1661,1667,1679,1685,1687,1689,1691,1693,1697,17,171,175,177,189,191,209,211,213,217,219,221,225,227,229,231,233,235,241,245,247,25,251,255,257,259,261,265,267,269,273,275,281,283,291,297,3,301,303,305,309,313,315,317,319,321,325,327,329,331,333,335,337,339,341,343,35,351,353,355,357,359,361,363,369,37,371,375,379,383,387,391,395,399,403,407,411,419,423,429,43,431,433,437,443,445,447,449,455,459,461,463,465,467,469,47,471,473,475,477,479,481,483,485,487,489,49,491,495,5,501,503,507,519,523,525,527,529,53,533,535,537,543,547,549,55,551,557,563,565,57,571,573,577,583,585,603,609,61,611,615,617,619,621,627,63,633,635,637,639,641,645,65,651,653,685,69,7,71,715,717,719,721,723,725,73,739,747,751,757,765,777,779,787,793,795,813,825,831,835,837,845,847,859,867,87,873,875,91,93,95,97,993};
			int[] arr2 = {1,3,5,7,15,17,25,35,37,43,47,49,53,55,57,61,63,65,69,71,73,87,91,93,95,97,103,105,107,109,111,117,119,121,127,133,135,145,151,159,163,171,175,177,189,191,209,211,213,217,219,221,225,227,229,231,233,235,241,245,247,251,255,257,259,261,265,267,269,273,275,281,283,291,297,301,303,305,309,313,315,317,319,321,325,327,329,331,333,335,337,339,341,343,351,353,355,357,359,361,363,369,371,375,377,379,381,383,385,387,389,391,393,395,397,399,401,403,405,407,409,411,413,419,423,429,431,433,437,443,445,447,449,455,459,461,463,465,467,469,471,473,475,477,479,481,483,485,487,489,491,495,501,503,505,507,509,519,521,523,525,527,529,533,535,537,543,547,549,551,557,563,565,571,573,577,583,585,603,609,611,615,617,619,621,627,633,635,637,639,641,645,651,653,685,715,717,719,721,723,725,739,747,751,757,765,777,779,787,793,795,813,825,831,835,837,845,847,859,867,873,875,993,1037,1039,1071,1075,1077,1079,1087,1089,1091,1093,1097,1109,1111,1113,1115,1117,1119,1121,1123,1125,1127,1173,1177,1179,1181,1183,1187,1235,1237,1239,1275,1277,1279,1281,1289,1291,1295,1297,1299,1301,1303,1305,1307,1309,1311,1313,1315,1317,1345,1347,1351,1363,1365,1367,1369,1371,1377,1379,1383,1385,1387,1389,1391,1395,1399,1401,1403,1405,1407,1409,1413,1421,1425,1427,1431,1433,1435,1437,1439,1445,1447,1449,1451,1453,1455,1457,1459,1461,1463,1465,1467,1471,1473,1475,1477,1479,1483,1485,1487,1491,1499,1505,1515,1523,1531,1533,1535,1537,1539,1543,1547,1549,1551,1553,1555,1557,1559,1563,1565,1569,1571,1573,1575,1577,1581,1583,1585,1587,1589,1591,1593,1595,1597,1599,1607,1613,1615,1619,1625,1631,1633,1635,1637,1641,1643,1645,1651,1653,1655,1657,1659,1661,1667,1669,1679,1681,1683,1685,1687,1689,1691,1693,1697};
			int[] intersect = intersect(arr1, arr2);
			for (int i = intersect.length - 1; i >= 0; i--) {
				System.out.print(intersect[i] + ",");
			}
		}
	}
}
